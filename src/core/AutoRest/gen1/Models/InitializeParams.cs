// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace ClientToServer.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// params to initialize server comm
    /// </summary>
    public partial class InitializeParams
    {
        /// <summary>
        /// Initializes a new instance of the InitializeParams class.
        /// </summary>
        public InitializeParams() { }

        /// <summary>
        /// Initializes a new instance of the InitializeParams class.
        /// </summary>
        /// <param name="processId">URI referencing the template.</param>
        /// <param name="rootPath">The rootPath of the workspace. Is null if no
        /// folder is open.</param>
        /// <param name="rootUri">The rootUri of the workspace. Is null if no
        /// folder is open.</param>
        /// <param name="initializationOptions">User provided initialization
        /// options</param>
        /// <param name="capabilities">The capabilities provided by the client
        /// (editor or tool)</param>
        public InitializeParams(int? processId = default(int?), string rootPath = default(string), string rootUri = default(string), object initializationOptions = default(object), ClientCapabilities capabilities = default(ClientCapabilities))
        {
            ProcessId = processId;
            RootPath = rootPath;
            RootUri = rootUri;
            InitializationOptions = initializationOptions;
            Capabilities = capabilities;
        }

        /// <summary>
        /// Gets or sets URI referencing the template.
        /// </summary>
        [JsonProperty(PropertyName = "processId")]
        public int? ProcessId { get; set; }

        /// <summary>
        /// Gets or sets the rootPath of the workspace. Is null if no folder is
        /// open.
        /// </summary>
        [JsonProperty(PropertyName = "rootPath")]
        public string RootPath { get; set; }

        /// <summary>
        /// Gets or sets the rootUri of the workspace. Is null if no folder is
        /// open.
        /// </summary>
        [JsonProperty(PropertyName = "rootUri")]
        public string RootUri { get; set; }

        /// <summary>
        /// Gets or sets user provided initialization options
        /// </summary>
        [JsonProperty(PropertyName = "initializationOptions")]
        public object InitializationOptions { get; set; }

        /// <summary>
        /// Gets or sets the capabilities provided by the client (editor or
        /// tool)
        /// </summary>
        [JsonProperty(PropertyName = "capabilities")]
        public ClientCapabilities Capabilities { get; set; }

    }
}

