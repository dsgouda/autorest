// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace ClientToServer.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The capabilities the language server provides.
    /// </summary>
    public partial class InitializeResult
    {
        /// <summary>
        /// Initializes a new instance of the InitializeResult class.
        /// </summary>
        public InitializeResult() { }

        /// <summary>
        /// Initializes a new instance of the InitializeResult class.
        /// </summary>
        /// <param name="hoverProvider">The server provides hover
        /// support.</param>
        /// <param name="completionProvider">The server provides completion
        /// support.</param>
        /// <param name="definitionProvider">The server provides goto
        /// definition support.</param>
        /// <param name="referencesProvider">The server provides find
        /// references support.</param>
        /// <param name="documentHighlightProvider">The server provides
        /// document highlight support.</param>
        /// <param name="documentSymbolProvider">The server provides document
        /// symbol support.</param>
        /// <param name="codeActionProvider">The server provides code
        /// actions.</param>
        /// <param name="workspaceSymbolProvider">The server provides workspace
        /// symbol support.</param>
        /// <param name="documentFormattingProvider">The server provides
        /// document formatting.</param>
        /// <param name="documentRangeFormattingProvider">The server provides
        /// document range formatting.</param>
        /// <param name="documentOnTypeFormattingProvider">The server provides
        /// document formatting on typing.</param>
        /// <param name="renameProvider">The server provides rename
        /// support.</param>
        /// <param name="experimental">Experimental server
        /// capabilities.</param>
        public InitializeResult(TextDocumentSyncOptions textDocumentSync = default(TextDocumentSyncOptions), bool? hoverProvider = default(bool?), CompletionOptions completionProvider = default(CompletionOptions), SignatureHelpOptions signatureHelpProvider = default(SignatureHelpOptions), bool? definitionProvider = default(bool?), bool? referencesProvider = default(bool?), bool? documentHighlightProvider = default(bool?), bool? documentSymbolProvider = default(bool?), bool? codeActionProvider = default(bool?), CodeLensOptions codeLensProvider = default(CodeLensOptions), bool? workspaceSymbolProvider = default(bool?), bool? documentFormattingProvider = default(bool?), bool? documentRangeFormattingProvider = default(bool?), bool? documentOnTypeFormattingProvider = default(bool?), bool? renameProvider = default(bool?), DocumentLinkOptions documentLinkProvider = default(DocumentLinkOptions), ExecuteCommandOptions executeCommandProvider = default(ExecuteCommandOptions), object experimental = default(object))
        {
            TextDocumentSync = textDocumentSync;
            HoverProvider = hoverProvider;
            CompletionProvider = completionProvider;
            SignatureHelpProvider = signatureHelpProvider;
            DefinitionProvider = definitionProvider;
            ReferencesProvider = referencesProvider;
            DocumentHighlightProvider = documentHighlightProvider;
            DocumentSymbolProvider = documentSymbolProvider;
            CodeActionProvider = codeActionProvider;
            CodeLensProvider = codeLensProvider;
            WorkspaceSymbolProvider = workspaceSymbolProvider;
            DocumentFormattingProvider = documentFormattingProvider;
            DocumentRangeFormattingProvider = documentRangeFormattingProvider;
            DocumentOnTypeFormattingProvider = documentOnTypeFormattingProvider;
            RenameProvider = renameProvider;
            DocumentLinkProvider = documentLinkProvider;
            ExecuteCommandProvider = executeCommandProvider;
            Experimental = experimental;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "textDocumentSync")]
        public TextDocumentSyncOptions TextDocumentSync { get; set; }

        /// <summary>
        /// Gets or sets the server provides hover support.
        /// </summary>
        [JsonProperty(PropertyName = "hoverProvider")]
        public bool? HoverProvider { get; set; }

        /// <summary>
        /// Gets or sets the server provides completion support.
        /// </summary>
        [JsonProperty(PropertyName = "completionProvider")]
        public CompletionOptions CompletionProvider { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "signatureHelpProvider")]
        public SignatureHelpOptions SignatureHelpProvider { get; set; }

        /// <summary>
        /// Gets or sets the server provides goto definition support.
        /// </summary>
        [JsonProperty(PropertyName = "definitionProvider")]
        public bool? DefinitionProvider { get; set; }

        /// <summary>
        /// Gets or sets the server provides find references support.
        /// </summary>
        [JsonProperty(PropertyName = "referencesProvider")]
        public bool? ReferencesProvider { get; set; }

        /// <summary>
        /// Gets or sets the server provides document highlight support.
        /// </summary>
        [JsonProperty(PropertyName = "documentHighlightProvider")]
        public bool? DocumentHighlightProvider { get; set; }

        /// <summary>
        /// Gets or sets the server provides document symbol support.
        /// </summary>
        [JsonProperty(PropertyName = "documentSymbolProvider")]
        public bool? DocumentSymbolProvider { get; set; }

        /// <summary>
        /// Gets or sets the server provides code actions.
        /// </summary>
        [JsonProperty(PropertyName = "codeActionProvider")]
        public bool? CodeActionProvider { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "codeLensProvider")]
        public CodeLensOptions CodeLensProvider { get; set; }

        /// <summary>
        /// Gets or sets the server provides workspace symbol support.
        /// </summary>
        [JsonProperty(PropertyName = "workspaceSymbolProvider")]
        public bool? WorkspaceSymbolProvider { get; set; }

        /// <summary>
        /// Gets or sets the server provides document formatting.
        /// </summary>
        [JsonProperty(PropertyName = "documentFormattingProvider")]
        public bool? DocumentFormattingProvider { get; set; }

        /// <summary>
        /// Gets or sets the server provides document range formatting.
        /// </summary>
        [JsonProperty(PropertyName = "documentRangeFormattingProvider")]
        public bool? DocumentRangeFormattingProvider { get; set; }

        /// <summary>
        /// Gets or sets the server provides document formatting on typing.
        /// </summary>
        [JsonProperty(PropertyName = "documentOnTypeFormattingProvider")]
        public bool? DocumentOnTypeFormattingProvider { get; set; }

        /// <summary>
        /// Gets or sets the server provides rename support.
        /// </summary>
        [JsonProperty(PropertyName = "renameProvider")]
        public bool? RenameProvider { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "documentLinkProvider")]
        public DocumentLinkOptions DocumentLinkProvider { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "executeCommandProvider")]
        public ExecuteCommandOptions ExecuteCommandProvider { get; set; }

        /// <summary>
        /// Gets or sets experimental server capabilities.
        /// </summary>
        [JsonProperty(PropertyName = "experimental")]
        public object Experimental { get; set; }

    }
}

